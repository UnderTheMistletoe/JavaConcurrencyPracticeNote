1.	线程会共享进程范围内的资源，例如内存句柄和文件句柄。
2. 	每个线程拥有各自的程序计数器（PC）,栈，以及局部变量等。
3. 	非阻塞I/O的使用，可以更好的适应网络环境，避免使进程阻塞等待数据。
4. 	多个线程共享相同的内存地址空间，导致某一个线程可以修改或者访问其他线程正在使用的变量。
5. 	带来了便利，和竞争冒险（Race condition）。
6. 	要使多线程环境下，线程的行为能够被预测，就需要使用同步机制，来使线程进行协同。
7. 	线程安全性的含义：“永远不发生糟糕的事情”。线程活跃性的含义：“某件正确的事情最终会发生”。（死锁，饥饿，活锁）
8. 	线程能提升程序的性能，但是线程无可避免的带来某种程序的运行时开销：上下文切换（Context switch）
9. 	保存和恢复执行上下文会带来极大的开销，并且会丢失局部性。并且同步机制无可避免的带来额外的性能开销。
10.	能够被多个线程访问的对象，必须要保证对象本生的线程安全性，来保证将线程安全性封装在对象内部
11.	
